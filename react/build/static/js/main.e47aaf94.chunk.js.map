{"version":3,"sources":["components/Home/components/Webcam.styled.js","components/Home/components/Webcam.js","components/Home/Hone.styled.js","components/Home/Home.js","components/Home/HomeContainer.js","App.styled.js","App.js","serviceWorker.js","index.js"],"names":["Wrap","styled","div","_templateObject","WebcamWrap","_templateObject2","Webcam","this","props","children","react_default","a","createElement","src","alt","PureComponent","Banner","Hone_styled_templateObject","Hone_styled_templateObject2","Icon","span","_templateObject3","_ref","marginRight","_ref2","size","_ref3","FlexContainer","_templateObject4","ButtonsWrap","_templateObject5","ButtonStyled","MuiButton","_templateObject6","Home","_this$props","onAction","actionBusy","Hone_styled_Wrap","Webcam_Webcam","disabled","fullWidth","onClick","RotateLeft_default","RotateRight_default","GpsFixed_default","API_BASE","HomContainer","state","getApiAction","path","axios","method","data","url","concat","then","response","_this","setState","handleAction","action","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","abrupt","stop","Home_Home","PageWrap","App_styled_templateObject","App","HomeContainer_HomContainer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e47aaf94.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  position: relative;\n  height: 250px;\n\n`;\n\nexport const WebcamWrap = styled.div`\n  overflow: hidden;\n  border:5px solid #ccc;\n  position: absolute;\n  left: 50%;\n  top:-50px;\n  background: #fff;\n  transform: translate(-50%, -25%);\n  border-radius: 50%;\n  width: 320px;\n  height: 320px;\n`;\n","import React, { PureComponent } from 'react'\nimport {Wrap, WebcamWrap} from './Webcam.styled';\nexport default class Webcam extends PureComponent {\n  render() {\n    const {children} = this.props;\n    return (\n      <Wrap>\n       <WebcamWrap>\n        <img src=\"http://192.168.47.149:8081/\" alt=\"webcam stream\" />\n       </WebcamWrap>\n      </Wrap>\n    )\n  }\n}\n","import styled from 'styled-components';\nimport MuiButton from '@material-ui/core/Button'\n\nexport const Banner = styled.div`\n  width: calc(100% + 48px);\n  height: 400px;\n  background-image: url('fuck-you-motherfucker.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n  margin: -24px;\n`;\n\nexport const Wrap = styled.div`\nheight: calc(100vh - 80px);\n  box-shadow: 0 0 0 1px rgba(51, 51, 51, 0.1), 0 5px 10px rgba(51, 51, 51, 0.1);\n  background: #fff\n  flex: 1 auto;\n  max-width: 500px;\n  padding: 24px;\n  flex-direction: column;\n  display: flex;\n`;\n\nexport const Icon = styled.span`\n  margin-right: ${({marginRight}) => marginRight || 0}px\n  svg {\n    width: ${({size}) => size || 32}px;\n    height: ${({size}) => size || 32}px;\n  }\n`;\n\nexport const FlexContainer = styled.div`\n  display:flex;\n  justify-content: space-between;\n  button:first-child {\n    margin-right: 20px;\n  }\n`;\n\nexport const ButtonsWrap = styled.div`\n  margin-top: auto;\n`\n\nexport const ButtonStyled = styled(MuiButton)`\n  && {\n    margin-top: 24px;\n    font-size: 20px;\n    font-weight: 700;\n    background: #4d647d;\n    color: #fff;\n    &:hover {\n      background: #263d54;\n    }\n  }\n`;","import React, { PureComponent } from 'react';\nimport RotateLeft from '@material-ui/icons/RotateLeft';\nimport RotateRight from '@material-ui/icons/RotateRight';\nimport GpsFixed from '@material-ui/icons/GpsFixed';\nimport {Webcam} from './components';\nimport {  ButtonStyled, Wrap, ButtonsWrap, Banner, FlexContainer, Icon } from './Hone.styled'\nexport default class Home extends PureComponent {\n\n  render() {\n    const {onAction, actionBusy} = this.props;\n    return (\n      <Wrap>\n      <Banner />\n      <Webcam />\n      <ButtonsWrap>\n      <FlexContainer>\n    <ButtonStyled disabled={actionBusy === 'left'} fullWidth onClick={onAction('left')}>\n      <Icon size={40} >\n        <RotateLeft />\n      </Icon>\n      </ButtonStyled>\n    <ButtonStyled disabled={actionBusy === 'right'} fullWidth onClick={onAction('right')} >\n      <Icon size={40} >\n        <RotateRight /> \n      </Icon>\n    </ButtonStyled>\n    </FlexContainer>\n      <div>\n        <ButtonStyled disabled={actionBusy === 'shoot'} fullWidth onClick={onAction('shoot')}>\n          <Icon size={40} marginRight={24} >\n            <GpsFixed /> \n          </Icon> \n          <span>shoot</span>\n        </ButtonStyled>\n      </div>\n\n      </ButtonsWrap>\n      </Wrap>\n    )\n  }\n}\n","import React, { PureComponent } from 'react';\nimport axios from 'axios';\nimport Home from './Home';\n\nconst API_BASE = 'http://192.168.47.149:3000/';\n\nexport default class HomContainer extends PureComponent {\n  state = {\n    actionBusy: null,\n  }\n  getApiAction = (path) => {\n    axios({\n      method:'post',\n      data: {},\n      url:`${API_BASE}${path}`,\n    })\n      .then((response) =>  {\n        if(response && response.data) {\n          switch (response.data) {\n            case 'MAX RIGHT':\n              this.setState({actionBusy: 'right'})\n              break;\n            case 'MAX LEFT':\n              this.setState({actionBusy: 'left'})\n              break;\n            default:\n              break;\n          }\n        }\n    });\n  }\n  handleAction = (action) => async () =>  {\n    switch (action) {\n      case 'left':\n        this.setState({actionBusy: 'left'});\n        await this.getApiAction('left');\n        this.setState({actionBusy: null});\n        break;\n      case 'right':\n      this.setState({actionBusy: 'right'});\n      await this.getApiAction('right');\n      this.setState({actionBusy: null});\n        break;\n      case 'shoot':\n      await this.setState({actionBusy: 'shoot'});\n      this.getApiAction('shoot-that-mofo');\n      this.setState({actionBusy: null});\n        break;\n      default :\n        return null;\n    }\n  }\n\n\n\n  render() {\n    const {actionBusy} = this.state;\n    return (\n      <Home actionBusy={actionBusy} onAction={this.handleAction} />\n    )\n  }\n}\n","import styled from 'styled-components';\n\nexport const PageWrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  display:flex;\n`;\n\nexport default null;","import React, { Component } from 'react';\nimport Home from './components/Home';\nimport {PageWrap} from './App.styled';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <PageWrap>\n       <Home />\n      </PageWrap>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}